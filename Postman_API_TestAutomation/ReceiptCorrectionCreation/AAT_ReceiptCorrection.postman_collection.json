{
	"info": {
		"_postman_id": "cf948839-0c14-4e65-b1af-0179d9d3cf15",
		"name": "Automated API Testing - [Receipt + Correction] - ANONYMIZED",
	},
	"item": [
		{
			"name": "0. Tworzenie paragonu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseBody = pm.response.text();",
							"console.log(responseBody);",
							"pm.environment.set(\"document_id\", responseBody);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"startTime\", new Date().getTime());",
							"console.log(\"Czas rozpoczęcia: \" + new Date().toISOString());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument?stampId=1595",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument"
					],
					"query": [
						{
							"key": "stampId",
							"value": "1595"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1.1 Get - search item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var firstProduct = jsonData[0];",
							"var productCode = firstProduct.productCode;",
							"pm.environment.set(\"productCode\", productCode);",
							"console.log(\"productCode: \" + productCode);",
							"var lotId = firstProduct.lotId;",
							"pm.environment.set(\"lotId\", lotId);",
							"console.log(\"lotId: \" + lotId);",
							"var productName = firstProduct.productName;",
							"pm.environment.set(\"productName\", productName);",
							"console.log(\"productName: \" + productName);",
							"var productNameVersion = firstProduct.productNameVersion;",
							"pm.environment.set(\"productNameVersion\", productNameVersion);",
							"console.log(\"productNameVersion: \" + productNameVersion);",
							"var barcode = firstProduct.barcode;",
							"pm.environment.set(\"barcode\", barcode);",
							"console.log(\"barcode: \" + barcode);",
							"var unitId = firstProduct.unitId;",
							"pm.environment.set(\"unitId\", unitId);",
							"console.log(\"unitId: \" + unitId);",
							"var vatRateId = firstProduct.vatRateId;",
							"pm.environment.set(\"vatRateId\", vatRateId);",
							"console.log(\"vatRateId: \" + vatRateId);",
							"var vatRateValue = firstProduct.vatRateValue;",
							"pm.environment.set(\"vatRateValue\", vatRateValue);",
							"console.log(\"vatRateValue: \" + vatRateValue);",
							"var productId = firstProduct.productId;",
							"pm.environment.set(\"productId\", productId);",
							"console.log(\"productId: \" + productId);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/ProductCatalog/lots?page=1&pageSize=20&addPagination=false&searchPhrase=88804",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"ProductCatalog",
						"lots"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "20"
						},
						{
							"key": "addPagination",
							"value": "false"
						},
						{
							"key": "searchPhrase",
							"value": "88804"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2 Add #1 item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\"productEndPrice\":0,\"toPay\":0,\"productCode\":\"{{productCode}}\",\"productName\":\"{{productName}}\",\"productNameVersion\":{{productNameVersion}},\"ean\":\"{{barcode}}\",\"quantity\":1,\"quantityInBasicUnit\":1,\"unit\":\"pc\",\"vatRateValue\":{{vatRateValue}},\"currency\":\"EUR\",\"description\":\"\",\"lotId\":{{lotId}},\"features\":[],\"productId\":{{productId}},\"unitId\":{{unitId}},\"vatRateId\":{{vatRateId}},\"assistantId\":95,\"pictureUrl\":null,\"unitPrecision\":0,\"productUnit\":{\"id\":67300,\"unitId\":{{unitId}},\"productId\":{{productId}},\"symbol\":\"pc\",\"isActive\":false,\"isBasic\":true,\"precision\":0,\"basicUnitPrecision\":0,\"numerator\":1,\"denominator\":1},\"attributes\":[],\"canEditName\":false}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument/addItems/{{document_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument",
						"addItems",
						"{{document_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.1 Get - search item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var zeroProduct = jsonData[0]",
							"var product2id = zeroProduct.product2id",
							"pm.environment.set(\"product2id\", zeroProduct.familyMembersIds[0]);",
							"console.log(\"product2id: \" + zeroProduct.familyMembersIds[0]);",
							"var product3id = zeroProduct.product3id",
							"pm.environment.set(\"product3id\", zeroProduct.familyMembersIds[1]);",
							"console.log(\"product3id: \" + zeroProduct.familyMembersIds[1]);",
							"var firstProduct = jsonData[19];",
							"var productCode = firstProduct.productCode;",
							"pm.environment.set(\"productCode\", productCode);",
							"console.log(\"productCode: \" + productCode);",
							"var lotId = firstProduct.lotId;",
							"pm.environment.set(\"lotId\", lotId);",
							"console.log(\"lotId: \" + lotId);",
							"var productName = firstProduct.productName;",
							"pm.environment.set(\"productName\", productName);",
							"console.log(\"productName: \" + productName);",
							"var productNameVersion = firstProduct.productNameVersion;",
							"pm.environment.set(\"productNameVersion\", productNameVersion);",
							"console.log(\"productNameVersion: \" + productNameVersion);",
							"var barcode = firstProduct.barcode;",
							"pm.environment.set(\"barcode\", barcode);",
							"console.log(\"barcode: \" + barcode);",
							"var unitId = firstProduct.unitId;",
							"pm.environment.set(\"unitId\", unitId);",
							"console.log(\"unitId: \" + unitId);",
							"var vatRateId = firstProduct.vatRateId;",
							"pm.environment.set(\"vatRateId\", vatRateId);",
							"console.log(\"vatRateId: \" + vatRateId);",
							"var vatRateValue = firstProduct.vatRateValue;",
							"pm.environment.set(\"vatRateValue\", vatRateValue);",
							"console.log(\"vatRateValue: \" + vatRateValue);",
							"var productId = firstProduct.productId;",
							"pm.environment.set(\"productId\", productId);",
							"console.log(\"productId: \" + productId);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/ProductCatalog/lots?page=1&pageSize=20&addPagination=false&searchPhrase=WRA01",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"ProductCatalog",
						"lots"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "20"
						},
						{
							"key": "addPagination",
							"value": "false"
						},
						{
							"key": "searchPhrase",
							"value": "WRA01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.2 Get - product variants",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/ProductCatalog/productsVariants?productIds={{productId}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"ProductCatalog",
						"productsVariants"
					],
					"query": [
						{
							"key": "productIds",
							"value": "{{productId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.3 Get store stocks",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/ProductCatalog/storeStocks?productIds={{productId}}&productIds={{product2id}}&productIds={{product3id}}&filters=",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"ProductCatalog",
						"storeStocks"
					],
					"query": [
						{
							"key": "productIds",
							"value": "{{productId}}"
						},
						{
							"key": "productIds",
							"value": "{{product2id}}"
						},
						{
							"key": "productIds",
							"value": "{{product3id}}"
						},
						{
							"key": "filters",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.4 Get attributes/features/family",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/ProductCatalog/productFamilyLots/{{productId}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"ProductCatalog",
						"productFamilyLots",
						"{{productId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.5 Get pictures",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Picture/pictures/products?productIds={{productId}}&productIds={{product2id}}&productIds={{product3id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Picture",
						"pictures",
						"products"
					],
					"query": [
						{
							"key": "productIds",
							"value": "{{productId}}"
						},
						{
							"key": "productIds",
							"value": "{{product2id}}"
						},
						{
							"key": "productIds",
							"value": "{{product3id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.6 Add #2 item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\"productEndPrice\":0,\"toPay\":0,\"productCode\":\"{{productCode}}\",\"productName\":\"{{productName}}\",\"productNameVersion\":{{productNameVersion}},\"ean\":\"{{barcode}}\",\"quantity\":1,\"quantityInBasicUnit\":1,\"unit\":\"pc\",\"vatRateValue\":{{vatRateValue}},\"currency\":\"EUR\",\"description\":\"\",\"lotId\":{{lotId}},\"features\":[{\"id\":108,\"featureName\":\"Colours\",\"featureValue\":\"Blue\"},{\"id\":65,\"featureName\":\"Length (F)\",\"featureValue\":\"32\"},{\"id\":66,\"featureName\":\"Size (F)\",\"featureValue\":\"27\"}],\"productId\":{{productId}},\"unitId\":{{unitId}},\"vatRateId\":{{vatRateId}},\"assistantId\":95,\"pictureUrl\":\"https://www.jeans24h.pl/10894-large_default/wrangler-straight-soft-blue-W28TJX386.jpg\",\"unitPrecision\":0,\"productUnit\":{\"id\":67886,\"unitId\":{{unitId}},\"productId\":{{productId}},\"symbol\":\"pc\",\"isActive\":false,\"isBasic\":true,\"precision\":0,\"basicUnitPrecision\":0,\"numerator\":1,\"denominator\":1},\"attributes\":[{\"attributeClassInternalName\":\"Colours\",\"attributeClassId\":108,\"attributeValue\":\"Blue\",\"attributeType\":\"List\",\"listValueId\":162,\"modificationDate\":\"2025-03-03T06:08:38.508Z\",\"objectId\":-1,\"objectTypeId\":111,\"isMultiValue\":false}],\"canEditName\":false}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument/addItems/{{document_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument",
						"addItems",
						"{{document_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Move to payment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument/{{document_id}}/saveCreated?type=Receipt",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument",
						"{{document_id}}",
						"saveCreated"
					],
					"query": [
						{
							"key": "type",
							"value": "Receipt"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3.1. Amount to pay",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var amount = jsonData.amount;",
							"pm.environment.set(\"amount\", amount);",
							"console.log(\"Zapisana wartość amount: \" + amount);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Payments/{{document_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Payments",
						"{{document_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Payment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"paymentFormId\":1,\"currencyId\":1,\"amount\":{{amount}},\"posId\":{{Pos_id}},\"voucherSortId\":1}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Payments/{{document_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Payments",
						"{{document_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Accept",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument/{{document_id}}/accept",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument",
						"{{document_id}}",
						"accept"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.5 Get Session ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let sessionId = pm.response.text();",
							"pm.environment.set(\"Session_Id\", sessionId);",
							"console.log(\"Session_Id:\", sessionId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Session/getCurrentSessionId/{{Pos_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Session",
						"getCurrentSessionId",
						"{{Pos_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Session update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var startTime = pm.environment.get(\"startTime\");",
							"var endTime = new Date().getTime();",
							"var totalTime = endTime - startTime;",
							"var seconds = Math.floor(totalTime / 1000);",
							"var milliseconds = totalTime % 1000;",
							"console.log(\"Całkowity czas wykonania: \" + seconds + \".\" + milliseconds + \" s\");",
							"pm.environment.set(\"totalExecutionTime\", totalTime);",
							"pm.test(\"Czas wykonania całej kolekcji\", function() {",
							"    console.log(\"Całkowity czas wykonania: \" + totalTime + \" ms\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Session/updateSessionData/{{Session_Id}}/{{document_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Session",
						"updateSessionData",
						"{{Session_Id}}",
						"{{document_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. GetTradeDocuemnts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument?Page=1&PageSize=50&ColumnSortName=creationDate&SortDirection=Descending",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument"
					],
					"query": [
						{
							"key": "Page",
							"value": "1"
						},
						{
							"key": "PageSize",
							"value": "50"
						},
						{
							"key": "ColumnSortName",
							"value": "creationDate"
						},
						{
							"key": "SortDirection",
							"value": "Descending"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "7.1 GetParkedDocuments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"page\":1,\"pageSize\":50,\"filterParams\":{\"documentTypes\":[],\"companyUnitIds\":[],\"pointOfSaleIds\":[],\"statuses\":[]},\"columnSortName\":\"creationDate\",\"sortDirection\":\"Descending\",\"searchPhrase\":\"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument/parking/list",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument",
						"parking",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "7.2. GetFilters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"page\":1,\"pageSize\":50,\"filterParams\":{\"documentTypes\":[],\"companyUnitIds\":[],\"pointOfSaleIds\":[],\"statuses\":[]},\"columnSortName\":\"creationDate\",\"sortDirection\":\"Descending\",\"searchPhrase\":\"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/TradeDocument/getDocumentsListFiltersData",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"TradeDocument",
						"getDocumentsListFiltersData"
					]
				}
			},
			"response": []
		},
		{
			"name": "7.3. IsLastSessionClosed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    const responseText = pm.response.text();",
							"    if (responseText === 'false') {",
							"        console.log(\"Odpowiedź to FALSE. Sesja jest otwarta, przechodzę do następnego requestu.\");",
							"        pm.environment.set(\"previousRequestSuccessful\", true);",
							"    } else {",
							"        console.error(\"Odpowiedź to TRUE. Sesja jest już zamknięta, ZATRZYMUJĘ wykonywanie kolekcji.\");",
							"        pm.environment.set(\"previousRequestSuccessful\", false);",
							"        pm.execution.setNextRequest(null);",
							"    }",
							"} else {",
							"    console.error(`Request zwrócił błąd HTTP ${pm.response.code}. Zatrzymuję wykonywanie kolekcji.`);",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"    pm.execution.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"page\":1,\"pageSize\":50,\"filterParams\":{\"documentTypes\":[],\"companyUnitIds\":[],\"pointOfSaleIds\":[],\"statuses\":[]},\"columnSortName\":\"creationDate\",\"sortDirection\":\"Descending\",\"searchPhrase\":\"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Session/isLastSessionClosed/{{Pos_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Session",
						"isLastSessionClosed",
						"{{Pos_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "8.CreateFromSourceDocument",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"previousRequestSuccessful\", true);",
							"    const jsonData = pm.response.json();",
							"    pm.environment.set(\"correction_id\", jsonData.id);",
							"});",
							"if (pm.response.code !== 200) {",
							"    pm.environment.set(\"previousRequestSuccessful\", false);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"previousRequestSuccessful\")) {",
							"    pm.execution.setNextRequest(null);",
							"    console.log(\"Poprzednie żądanie nie powiodło się, przerywam wykonywanie kolekcji\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "company-unit-id",
						"value": "{{Company_unit_id}}",
						"type": "text"
					},
					{
						"key": "pos-id",
						"value": "{{Pos_id}}",
						"type": "text"
					},
					{
						"key": "pos-code",
						"value": "{{Pos_code}}",
						"type": "text"
					},
					{
						"key": "Referer",
						"value": "{{URL_Address}}/webpos-poc/createNewDocument",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"page\":1,\"pageSize\":50,\"filterParams\":{\"documentTypes\":[],\"companyUnitIds\":[],\"pointOfSaleIds\":[],\"statuses\":[]},\"columnSortName\":\"creationDate\",\"sortDirection\":\"Descending\",\"searchPhrase\":\"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL_Address}}/api/v1/Corrections/CreateFromSourceDocument/{{document_id}}",
					"host": [
						"{{URL_Address}}"
					],
					"path": [
						"api",
						"v1",
						"Corrections",
						"CreateFromSourceDocument",
						"{{document_id}}"
					]
				}
			},
			"